<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on 奇风岁月</title><link>https://travisbikkle.github.io/java/</link><description>Recent content in Java on 奇风岁月</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Mon, 29 Jul 2024 10:21:11 +0800</lastBuildDate><atom:link href="https://travisbikkle.github.io/java/index.xml" rel="self" type="application/rss+xml"/><item><title>怎么在 Java 中限制用户访问频率</title><link>https://travisbikkle.github.io/2024/07/request-limit/</link><pubDate>Mon, 29 Jul 2024 10:21:11 +0800</pubDate><guid>https://travisbikkle.github.io/2024/07/request-limit/</guid><description>我们当然要限制用户访问频率，因为用户可能生气，并狂点我们的网站或应用。
他也可能很坏，使用一些爬虫试图拖垮我们的服务器。
所以怎么实现呢？
本文使用 springboot，并将用户的信息和访问频率记录到 redis 中，如果你没有使用 redis，也不影响，你可以参考着自己实现，比如存储到内存或数据库中。
想想这个需求，从第一性原理出发 用户可能没有登录，或者已经登录了。
如果用户登录了，我们就根据用户名来限制，否则，就根据IP或者其它设备码来限制，本文假设使用IP。
我们希望它足够简单，可以在多个方法上使用，而不需要编写额外的代码。所以我们要使用接口切面。
接口 1public @interface RequestRateLimit { 2 3	/** 4	* 限流的key，比如限制用户注册，限制用户发送邮件，等等，一般是方法名 5	* @return 6	*/ 7	String key() default &amp;#34;&amp;#34;; 8 9	/** 10	* 限流模式,默认单机 11	* @return 12	*/ 13	RateType type() default RateType.PER_CLIENT; 14 15	/** 16	* 限流速率，1次/分钟 17	* @return 18	*/ 19	long rate() default 1; 20 21	/** 22	* 限流速率，每分钟 23	* @return 24	*/ 25	long rateInterval() default 60 * 1000; 26 27	/** 28	* 限流速率单位 29	* @return 30	*/ 31	RateIntervalUnit timeUnit() default RateIntervalUnit.</description></item></channel></rss>