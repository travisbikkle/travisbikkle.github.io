<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 奇风岁月</title><link>https://travisbikkle.github.io/linux/</link><description>Recent content in Linux on 奇风岁月</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Thu, 20 Jun 2024 15:38:19 +0000</lastBuildDate><atom:link href="https://travisbikkle.github.io/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>TP-LINK WAR-2600L 路由器 DMZ 功能分析</title><link>https://travisbikkle.github.io/2024/06/tplink-war2600l-iptables/</link><pubDate>Thu, 20 Jun 2024 15:38:19 +0000</pubDate><guid>https://travisbikkle.github.io/2024/06/tplink-war2600l-iptables/</guid><description>问题 硬件型号 TL-WAR2600L v2.0 企业路由器 固件版本 1.0.1 Build 20180313 Rel.37492 本地150自提了这个路由器，准备用它的多 wan 口搞搞事情，但是没想到掉坑里了：
80, 443 端口使用宽带拨号的外网 ip 可以访问（不安全） 1在局域网内输入外网宽带 ip，可以访问路由器管理界面； 2但是在真正的外网上，比如手机不连局域网，访问宽带 ip，实际上又不能访问（我的 ip 是公网 ip）。 虚拟服务器转发的端口，从外网无法基本全部不可用 分析过程 获取 ssh 端口号和密码，登录到路由器后台 系统工具-设备管理-备份与导入设置，导出一个 bin 文件。使用 7z 打开，查看如下路径 \backup-TP-LINK-2024-06-20\tmp\userconfig\etc\config\dropbear 1config dropbear 2 option PasswordAuth &amp;#39;on&amp;#39; 3 option RootPasswordAuth &amp;#39;on&amp;#39; 4 option Port &amp;#39;33400&amp;#39; # 这个就是端口 5 option ssh_port_switch &amp;#39;on&amp;#39; 在路由器管理页面 基本设置 - LAN设置 中获取 mac 地址，然后找一个 linux 命令行工具执行 1## xx-xx-xx-xx-xx-xx 是你找到的 mac 地址。注意 -n 2echo -n &amp;#34;xx-xx-xx-xx-xx-xx&amp;#34;|sed &amp;#34;s/-//g&amp;#34;|md5sum|cut -c 1-8 3xxxxxxxx # 8位密码 登录后我其实还没发现（因为我不折腾 openwrt，有群晖和一台2U机架服务器了，路由器我只追求稳定）， 这个路由器用的是 openwrt barrier breaker（龙妈：我是 chain breaker） 14.</description></item><item><title>Vmware 死机但是鼠标可以动</title><link>https://travisbikkle.github.io/2024/03/vmware-freeze/</link><pubDate>Wed, 06 Mar 2024 17:09:19 +0000</pubDate><guid>https://travisbikkle.github.io/2024/03/vmware-freeze/</guid><description>问题现象 宿主机 Win11 客户机 Kubuntu 22.04 vmware vmware workstation pro 17.5 在使用 VSCode 的时候，我的客户机总是没有规律的死机，这个时候鼠标可以移动，但是无法点击。能看出来客户机并没有真正的死机。我曾经监控过 /var/log 下面的日志，以及用 top 监控过系统资源情况，但是没能发现任何异常。后来在宿主机的虚拟机目录 vmware.log 中，看到如下一行日志，才明白发生了什么：
12024-03-06T16:33:01.365Z In(05) mks VMMouse: Dropping move received while input queue was full 这是最后一行日志，非常好发现。这说明客户机不再接收任何输入，难怪表现为好像死机了！
解决方案 我搜索了这个报错，在 vmware 社区很多年前的一篇文章中找到了如下方法。
config.ini 的位置可能因操作系统不同而不同，请自行搜索位置。 config.ini 修改后保存时可能没有权限，可以先另存到桌面，然后拖动到原位置。 vmx文件在修改后可能发生错误，请先备份该文件。 在 C:\ProgramData\VMware\VMware Workstation\config.ini 添加以下两行 1prefvmx.useRecommendedLockedMemSize = &amp;#34;TRUE&amp;#34; 2prefvmx.minVmMemPct = &amp;#34;100&amp;#34; 一些遇到鼠标或者键盘一直输入问题，例如 characterrrrrrrrr，可能还需要添加如下两行（未经验证） 1mks.disableTypematic = &amp;#34;TRUE&amp;#34; 2mks.disableRemoteClientTypematic = &amp;#34;TRUE&amp;#34; 修改 xxxx.vmx（该文件存在于你的客户机根目录，请将 xxxx.vmx 替换为实际名称） 1sched.mem.pshare.enable = &amp;#34;FALSE&amp;#34; 2mainMem.useNamedFile = &amp;#34;FALSE&amp;#34; 3MemTrimRate = &amp;#34;0&amp;#34; 4MemAllowAutoScaleDown = &amp;#34;FALSE&amp;#34; 如果问题仍然没有解决，可以降级到 17.</description></item><item><title>Termux 常用命令</title><link>https://travisbikkle.github.io/2024/01/termux-useful-command/</link><pubDate>Sat, 27 Jan 2024 16:29:16 +0800</pubDate><guid>https://travisbikkle.github.io/2024/01/termux-useful-command/</guid><description>常用的内置的 termux 命令 输入 termux 并按 Tab 提示，控制台会显示一些 termux 开头的命令。 下面是一些最常用命令，如更换软件源或者在手机内拷贝文件：
1# 更换软件源 2termux-change-repo 3# 开启存储权限 4termux-setup-storage 5# 保持常亮 6termux-wake-lock 从手机复制文件 1# 开启存储权限 2termux-setup-storage 3# 执行后重新启动 termux，然后输入 4ln -s /sdcard/Download ~/download 5# 或者有些手机是 6ln -s /sdcard/Downloads ~/download 定时任务 1# 保持常亮 2termux-wake-lock 3# 安装并启动 crond 4apt install cronie 5crond 6# 增加一个定时任务 7crontab -e 8# 手动输入或使用 https://crontab-generator.org/ 生成一个，例如 91 * * * * bash ~/download/update_domain.sh &amp;gt; ~/download/update.log 10# 按 ctrl o 保存， ctrl x 退出</description></item><item><title>Vmware 中 Intellij Idea 快捷键错误</title><link>https://travisbikkle.github.io/2023/12/idea-shortkey-error-in-vmware/</link><pubDate>Fri, 01 Dec 2023 11:24:32 +0800</pubDate><guid>https://travisbikkle.github.io/2023/12/idea-shortkey-error-in-vmware/</guid><description>在VMware中，CTRL ALT是默认的将鼠标焦点从虚拟机中移开的热键，这将导致一切在Vmware中运行的虚拟机系统中以该组合键 位开头的热键不可用。比如Intellij Idea的默认后退快捷键CTRL ALT LEFT。
一开始我以为是KDE热键冲突的问题，因为KDE默认有很多的快捷键，但是经过查看KDE的系统设置，并没有发现热键占用的情况：
直到我意识到screenkey也没有提示，这说明我的KDE根本没有接收到CTRL ALT LEFT按键。答案显而易见，是Vmware的问题了。 为了防止冲突，在Vmware的 编辑-首选项-热键 中可以将这四个按键都勾选上。</description></item><item><title>Vmware Power-ON 脚本启动失败</title><link>https://travisbikkle.github.io/2023/11/vmware-poweron-script/</link><pubDate>Thu, 16 Nov 2023 11:24:33 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/vmware-poweron-script/</guid><description>VMware 的开机脚本位于 /etc/vmware-tools/ 下。如果你的虚拟机报错启动客户机脚本失败，你可以在虚拟机-电源-开机中开机，然后进入该目录调试。
如果你的vmware-tools进行过升级，但是升级过程中出现了问题，可能导致脚本没有正确命名。比如，下面是开机、关机等操作对应的脚本名称
1poweroff-vm-default 2poweron-vm-default 3resume-vm-default 4suspend-vm-default 5vgauth.conf 而你的机器上可能是
1poweroff-vm-default.dpkg-dist 2poweron-vm-default.dpkg-dist 3resume-vm-default.dpkg-dist 4suspend-vm-default.dpkg-dist 5vgauth.conf.dpkg-dist 那么请执行以下命令重命名即可
1find /etc/vmware-tools/ -name &amp;#34;*.dpkg-dist&amp;#34; -exec sh -c &amp;#39;x={}; cp &amp;#34;$x&amp;#34; $(echo $x | sed &amp;#39;s/\.dpkg-dist//g&amp;#39;)&amp;#39; \; 另外你还可能需要检查 /etc/vmware-tools/scripts/vmware 以及各个脚本是否具有可执行权限。</description></item><item><title>Kubuntu Vscode 鼠标列编辑设置</title><link>https://travisbikkle.github.io/2023/11/kubuntu-vscode-mouse/</link><pubDate>Wed, 15 Nov 2023 11:24:33 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu-vscode-mouse/</guid><description>鼠标中键是某些操作系统的默认粘贴快捷键，这导致在VSCode中无法使用鼠标中键进入列编辑模式。
点击 文件-首选项-设置 点击右上角，打开json文件 添加如下行
1&amp;#34;editor.selectionClipboard&amp;#34;: false 关闭 VSCode 并重新打开，测试是否生效。</description></item><item><title>Android Studio Emulator 启动失败</title><link>https://travisbikkle.github.io/2023/11/android-studio-emulator-failed/</link><pubDate>Wed, 15 Nov 2023 11:24:23 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/android-studio-emulator-failed/</guid><description>报错现象 The emulator process for AVD Pixel_3a_API_34_extension_level_7_x86_64 has terminated.
没有任何的报错信息，如果不知道日志在哪里，该如何排查呢？
解决办法 在你的家目录如下位置，执行如下命令，通过命令行查询出虚拟设备并启动，将报错信息打印到前台
1yourname@v:~/Android/Sdk/emulator$ ./emulator -list-avds 2Pixel_3a_API_34_extension_level_7_x86_64 3yourname@v:~/Android/Sdk/emulator$ ./emulator @Pixel_3a_API_34_extension_level_7_x86_64 4INFO | Android emulator version 32.1.15.0 (build_id 10696886) (CL:N/A) 5INFO | Found systemPath /home/yourname/Android/Sdk/system-images/android-34/google_apis/x86_64/ 6INFO | Storing crashdata in: /tmp/android-yourname/emu-crash.db, detection is enabled 7INFO | Duplicate loglines will be removed, if you wish to see each indiviudal line launch with the -log-nofilter flag. 8WARNING | Please update the emulator to one that supports the feature(s): SupportPixelFold 9ERROR | Not enough space to create userdata partition.</description></item><item><title>Intellij Idea 启动报错</title><link>https://travisbikkle.github.io/2023/11/idea-start-error/</link><pubDate>Tue, 14 Nov 2023 11:24:23 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/idea-start-error/</guid><description>Intellij Idea 2023.2 启动报错：
Error while opening intellij &amp;ldquo;Cannot connect to already running IDE instance. Exception: Process 2,837 is still running&amp;rdquo;
youtrack 跟踪 https://youtrack.jetbrains.com/issue/IDEA-330531
解决办法 在菜单中编辑启动项，在idea.sh前加入一个前置的脚本，在其中删除不该存在的.lock文件
1/opt/idea-IU-232.10203.10/bin/prestart.sh; /opt/idea-IU-232.10203.10/bin/idea.sh 脚本的内容为
1#!/bin/bash 2rm ~/.config/JetBrains/IntelliJIdea2023.2/.lock</description></item><item><title>Kubuntu 软件源在哪里修改</title><link>https://travisbikkle.github.io/2023/11/kubuntu2204-software-resources-bug/</link><pubDate>Wed, 08 Nov 2023 11:24:30 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu2204-software-resources-bug/</guid><description>Kubuntu 22.04 的软件源可以在 Discover 中的如下位置设置。 但是如果你的 Discover 不显示以上界面，可以通过如下方法来修复。
编辑如下文件
1vi /usr/share/applications/software-properties-qt.desktop 将以下内容替换到源文件
1[Desktop Entry] 2Name=Software Sources 3GenericName=Software Sources 4Comment=Configure the sources for installable software and updates 5Exec=pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY software-properties-qt 6Icon=applications-other 7NoDisplay=false 8Terminal=false 9X-MultipleArgs=false 10Type=Application 11Categories=System;Settings; 12MimeType=text/x-apt-sources-list; 13X-KDE-SubstituteUID=false 14X-Ubuntu-Gettext-Domain=software-properties 如此，在 Discover可以显示软件源的界面，在菜单中也可以搜索到在其它发行版中常见的 软件源 菜单项。</description></item><item><title>Kubuntu 22.04 中文输入法</title><link>https://travisbikkle.github.io/2023/11/kubuntu2204-chiness-im/</link><pubDate>Wed, 08 Nov 2023 11:24:29 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu2204-chiness-im/</guid><description>继续使用 fcitx5（推荐） 安装 fcitx5 中文输入法
1sudo apt install fcitx5-chinese-addons \ 2fcitx5-frontend-gtk4 fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 \ 3fcitx5-frontend-qt5 $(check-language-support) check-language-support 同时安装了系统中缺失的中文语言包（在 区域设置-语言 中点击安装缺失的语言包没有反应），这样才能在第3步中看到 输入法 的选项。
启用 fcitx5 注意，不要相信网上任何要你更改.xinputrc或者在某些文件中添加如下变量的话
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx
请直接使用你登录的用户执行以下命令
1im-config 在弹出的窗口中，依次选择确定，是，选择如下选项即可。 重启系统 在 系统设置-区域设置-输入法 中添加 拼音 或者 pinyin
解决 Intellij Idea 中使用 fcitx5 候选框不跟随的问题 (20240126更新：此时的Idea已经没有此问题，无需进行此步) 可以将如下项目的release文件解压缩到JetBrain产品的jbr目录中（可能导致markdown无法预览）
1https://github.com/RikudouPatrickstar/JetBrainsRuntime-for-Linux-x64 程序员推荐在如下配置中关闭简繁切换快捷键
系统设置-区域设置-输入法-配置附加组件-简繁切换 中删除CTRL SHIFT F的简繁切换快捷键。
解决在 Visual Studio Code 中无法使用任何中文输入法的问题
如果你在 Discover 软件管理工具中下载了 VSCode，请卸载后，在官网下载 deb 包安装，即可解决无法输入中文的问题。
使用 fcitx4 卸载 fcitx5
1sudo apt-get remove fcitx5 安装谷歌拼音输入法</description></item><item><title>Ubuntu 改键</title><link>https://travisbikkle.github.io/2023/10/remaps-keys-in-ubuntu/</link><pubDate>Tue, 17 Oct 2023 11:24:32 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/remaps-keys-in-ubuntu/</guid><description>在 Ubuntu Software 中搜索 Gnome Tweaks 并安装。 点击 Keyboard &amp;amp; Mouse 点击 Additional Layout Options 在弹出的窗口中，勾选 Ctrl position 中的 Swap Ctrl and Caps Lock 本文基于 Ubuntu 22.04 LTS 及 Gnome Tweaks 3.34.0 编写。
补充：使用kde更加的方便，该设置已经被集成到系统设置中，无需下载 Gnome Tweaks。</description></item><item><title>Code Server Nginx Ssl Error</title><link>https://travisbikkle.github.io/2023/10/code-server-nginx-ssl-error-1006/</link><pubDate>Tue, 17 Oct 2023 11:24:30 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/code-server-nginx-ssl-error-1006/</guid><description>1An unexpected error occurred that requires a reload of this page. 2The workbench failed to connect to the server (Error: WebSocket close with status code 1006) Code server popped up a websocket error when I exposed code-server using a custom domain and a custom port via nginx.
Here is part of my nginx.conf.
1 upstream code{ 2 server xxxxxxxxx; 3 } 4 server { 5 listen 40032 ssl; 6 server_name xxxxxxxx; 7 ssl_certificate certs/mycert.</description></item><item><title>How to add samba entry in /etc/fstab</title><link>https://travisbikkle.github.io/2023/10/fatab-samba/</link><pubDate>Tue, 17 Oct 2023 11:24:29 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/fatab-samba/</guid><description>Configure Samba On Ubuntu
1. install necessary tools 1sudo apt install cifs-utils 2. prepare credentials 1sudo mkdir /mnt/samba 2sudo vi /root/.smb_credentials 3. put next 2 lines into /root/.smb_credentials 1username=&amp;lt;your user name&amp;gt; 2password=&amp;lt;your password&amp;gt; 4. change credential file permission for security reason 1chmod 600 /root/.smb_credentials 5. configure /etc/fstab 1sudo vi /etc/fstab 6. put next line into /etc/fstab. add noauto to options if you don&amp;rsquo;t want to let Ubuntu auto mount this path 1#&amp;lt;shared path&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; 2//192.</description></item><item><title>Ubuntu Vnc</title><link>https://travisbikkle.github.io/2023/04/ubuntu-vnc/</link><pubDate>Mon, 10 Apr 2023 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2023/04/ubuntu-vnc/</guid><description>本文基于 Ubuntu 20.04 编写。
安装 vncserver 和要使用的桌面管理器 xfce 1apt install tightvncserver xfce4 xfce4-goodies 更改密码 1vncpasswd 配置 vnc 以便客户端连接时使用 xfce 桌面 编辑 ~/.vnc/xstartup，输入以下内容 1#!/bin/sh 2unset SESSION_MANAGER 3unset DBUS_SESSION_BUS_ADDRESS 4startxfce4 &amp;amp; 执行以下命令 1chmod +x ~/.vnc/xstartup 禁用休眠 1systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target 启动服务器 1vncserver -localhost no -geometry 1920x1080 参考 https://linuxconfig.org/vnc-server-on-ubuntu-20-04-focal-fossa-linux</description></item><item><title>端口转发的一些方法</title><link>https://travisbikkle.github.io/2023/02/port-forward/</link><pubDate>Wed, 01 Feb 2023 11:24:24 +0800</pubDate><guid>https://travisbikkle.github.io/2023/02/port-forward/</guid><description>在《如何抓包分析 vrrp 报文是否中断》中我们使用了 iptables 进行指定协议的报文日志记录功能，此处新增一个好用的命令。
我们在开发过程中，可能经常需要经过堡垒机、跳板机等中转一次，才能访问到处于小网中的服务，如数据库。使用以下命令，可以在不借助第三方软件的情况下，完成端口转发，实现直连小网服务。
iptables 假设 192.168.1.3 是你的小网机器，端口是 15432
1iptables -t nat -A PREROUTING -p tcp --dport 15432 -j DNAT --to-destination 192.168.1.3:15432 2iptables -t nat -A POSTROUTING -p tcp -m tcp --dport 15432 -j MASQUERADE nginx upstream 192.168.1.3 { server 192.168.1.3:15432; } server { listen 15432; proxy_pass 192.168.1.3; proxy_connect_timeout 1h; proxy_timeout 1h; } 或者用 go 自己写了一些小工具来转发，我自己还写了一个自动生成 xshell 配置的工具，因为在公司内网，不便共享。</description></item><item><title>vrrp 报文抓包的方法</title><link>https://travisbikkle.github.io/2022/02/vrrp-cap/</link><pubDate>Tue, 01 Feb 2022 11:24:24 +0800</pubDate><guid>https://travisbikkle.github.io/2022/02/vrrp-cap/</guid><description>keepalived 的主机和备机，会每隔3s通过单播，向对方发送 vrrp 报文，当备机在 3次*每次心跳间隔（keepalived.conf中的adver_int参数） 都收不到主机的广播，自己将会升主。
以下两种可能都会存在：
主机没有发送广播 主机发送了广播，备机没有收到 因此，在主备都需要监控vrrp的发送（out）或接收（in）记录。 使用以下两种方式，都可以监控每次 vrrp 报文的内容，以便定位问题。
iptables 在主机和备机都添加监控vrrp发送和接收的iptables日志（该规则仅抓取vrrp行为，没有其它副作用） 1iptables -t raw -A PREROUTING -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 2iptables -t raw -A OUTPUT -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 使用以下命令检测是否添加成功： 1iptables -L -t raw -n 在/var/log/messages可以查看vrrp的记录。如果是suse或其它操作系统，该日志中没有vrrp记录的话，可以在dmesg或者/var/log/的目录中grep VRRP查看。 定位完问题后，执行以下命令删除添加的iptables规则 1iptables -t raw -D PREROUTING -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 2iptables -t raw -D OUTPUT -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; tcpdump wireshark tcpdump 命令需要自行获取，wireshark 需要自行下载，这部分仅记录常用命令和注意点，由于在公司内网，图片无法放上来。</description></item><item><title>一个数据库主备频繁切换案例</title><link>https://travisbikkle.github.io/2022/01/a-case-of-database-switch/</link><pubDate>Thu, 20 Jan 2022 11:24:25 +0800</pubDate><guid>https://travisbikkle.github.io/2022/01/a-case-of-database-switch/</guid><description>问题现象 某集团某局点分别部署了某数据库的主备实例，业务发现偶尔访问数据库报错。
定位结论 其中一个节点使用的某物理机型，网卡存在故障，发生了多次复位，致使某数据库备机的keepalived双机软件接收不到对端的vrrp信号，备机在网卡复位期间短暂升主，两台机器都出现了vip，导致业务访问某数据库失败。
需要联系厂商，针对以下疑问给出答复：
节点A（某品牌F）和节点B（某品牌L）使用的网卡型号一样，但是为什么某品牌F的固件版本要比某品牌L的新？
某品牌L的网卡信息，和某品牌L官网该型号的机器的认证信息不一致，见下表。
表1-1 某品牌F机型、某品牌L机型和某品牌L官网认证信息对比
项目 节点A 节点B 某品牌L官网认证信息 服务器型号 某品牌F FiberHome R2200 V5 某品牌L Inspur NF8480M5 某品牌L Inspur NF8480M5 网卡驱动 ixgbe 5.1.0-k ixgbe 5.1.0-k igb.ko 5.6.0-k 网卡固件 0x800006da 1.1824.0 0x800003df - 是否发生过重启 否 是 - 定位过程 查看两个节点的keepalived日志
1cd /xx/xx/xx/logs 2zgrep Entering keepalived* 发现主机（节点A）上无异常，备机的keepalived在master、backup、fault三个状态频繁切换。
当keepalived进入master状态，会将vip绑定到网卡上。这样主机和备机都有vip，业务访问某数据库将会出现问题。
在备机上使用如下命令可以抓到短暂出现的vip：
1while true;do ip a s bond1|grep x.x.x.x;sleep 0.2;done 查看备机的keepalived.log，发现备机无法接收到主机的vrrp广播。
keepalived的主备机都会每3s发送一次vrrp协议的广播，当备机连续3次（9s）接收不到主机的广播，就会将自己升主。
查看主机的keepalived.log，发现主机在正常发送vrrp广播。
使用tcpdump在主机和备机同时抓包，问题复现后，发现主机确实发送了vrrp的广播，但是备机在(15:46:14-15:46:32)有18s的时间没有接收到任何来自主机的广播（此处应该有图，但是不放了）。
使用如下命令，查看备机上keepalived接收vrrp广播的网卡情况，发现是一张由eth4和eth8组成的active-backup模式的逻辑网卡，：
1cat /proc/net/bonding/bond1 查看/var/log/messages中两张物理网卡的信息，发现eth4和eth8网卡发生了多次复位，复位时间和gauss-datacube出现异常的时间能够对应的上（此处应该有图，但是不放了）。
查看节点B的服务器型号及网卡型号、固件版本（此处应该有图，但是不放了）。 节点B和节点A对比，发现节点A的这台某品牌F机型，比节点B的某品牌L机型使用的网卡固件要更新： 节点B和某品牌L官网认证信息(https://www.suse.com/nbswebapp/yesBulletin.jsp?bulletinNumber=148996)对比，发现节点B节点使用的网卡driver name和认证信息不符： 除了某局点节点B的某品牌L机型节点，我们还在其它局点的appdb的节点的某品牌L机型上，也发现了网卡重启的现象，该现象在某品牌F机型上未发现，判断是某品牌L的这批机器网卡存在故障。 这种短暂网卡重启的问题，由于tcp重连的特性，对于普通的应用感知不大，但是对于数据库这样包含双机软件的敏感应用，影响较大。</description></item><item><title>Blktrace</title><link>https://travisbikkle.github.io/2021/04/blktrace/</link><pubDate>Mon, 19 Apr 2021 11:24:25 +0800</pubDate><guid>https://travisbikkle.github.io/2021/04/blktrace/</guid><description>可以用来定位 I/O 性能问题的工具有很多。常见的有 fio, dd, atop, iotop, iostat, vmstat 等。vmstat 可以提供系统性能的一个概览，一般可以看出来性能问题究竟是不是 I/O 的锅。想要具体查看每个设备的 I/O 情况，如 average request size, reads or writes per second，可以使用 iostat。
blktrace 介绍 更细粒度的分析，可以使用 blktrace。 blktrace 可以记录在 I/O 栈的多个阶段分别耗时多少。blktrace 的输出结果是二进制文件，可以用 blkparse 解析，但是它仍然很难读，需要使用 btt 来进一步转换成更易读的形式。
btt 输出结果涉及到的一些基础知识 btt 会对 I/O 栈 的不同阶段的耗时做分析，这些阶段是指：
Q — A block I/O is Queued G — Get Request M — A block I/O is Merged with an existing request. I — A request is Inserted into the device&amp;#39;s queue.</description></item><item><title>npm 镜像等设置</title><link>https://travisbikkle.github.io/2018/10/common-pakage-manager-proxy/</link><pubDate>Sat, 13 Oct 2018 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2018/10/common-pakage-manager-proxy/</guid><description>中国加速镜像 npm可能未及时同步 pip可能未同步官方已经删除的恶意软件包 manager useful commands command pnpm pnpm get registry pnpm config set registry https://registry.npmmirror.com npm npm get registry npm config set registry https://registry.npmmirror.com yarn yarn config get registry yarn config set registry https://registry.npmmirror.com pip pip config list # for pip install
pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/
# for pip search
pip config set global.index https://mirrors.aliyun.com/pypi
pip config set global.trusted-host mirrors.aliyun.com 代理 注意如果你没有翻墙软件就不用做下面的配置，请将地址修改为你实际的代理地址。
npm(~/.npmrc)
1proxy=http://localhost:8118 2https_proxy=https://localhost:8118 3strict-ssl=false yarn(~/.yarnrc)
1env: 2 proxy &amp;#39;http://localhost:8118&amp;#39; 3 https_proxy &amp;#39;https://localhost:8118&amp;#39; 4 strict-ssl false</description></item></channel></rss>