<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tips on 奇风岁月</title><link>https://travisbikkle.github.io/categories/tips/</link><description>Recent content in Tips on 奇风岁月</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Fri, 04 Oct 2024 11:24:31 +0800</lastBuildDate><atom:link href="https://travisbikkle.github.io/categories/tips/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 cdn 低成本加速网站，或解决443和80端口被封问题</title><link>https://travisbikkle.github.io/2024/10/how-to-proxy-with-cdn/</link><pubDate>Fri, 04 Oct 2024 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2024/10/how-to-proxy-with-cdn/</guid><description>CDN是个好东西，我们一般需要使用CDN，来让我们的网站能够在全球都能快速访问，并且降低服务器压力，防止DDOS攻击等。
简单来说，你把你的域名的CNAME(如a.example.com) 指向CDN厂商的域名(如abc.cloudfront.net)。
用户访问a.example.com的时候，实际上访问的是abc.cloudfront.net。abc.cloudfront.net上面当然没有你的站点资源，所以会回头访问你配置的源站（这一步叫做回源）拉取资源，并存储到本地（这一步叫做缓存）。
你也可以在站点发布后，第一时间让CDN拉取站点资源，并下发到它位于全球的站点，防止用户在高峰期一窝蜂地访问过来，导致源站压力过大。这一步叫做预热。
用户访问CDN厂商的域名，CDN会分配个给用户最近的站点，这样用户访问的速度也快了。
CDN还支持指定回源的协议和端口，本文后面将会提及，这对使用家庭宽带部署服务并且443和80端口被封锁的用户非常有帮助。
虽然我测试的域名在腾讯云，但是我并没有使用腾讯云的cdn服务，因为在选择试用的时候，腾讯云提示我没有资格。
于是我只测试了cloudflare，aws，阿里云的cdn服务，并在此记录下来过程和配置，希望能够帮助有需要的人。
Cloudflare 右上角点 Add site，增加你的域名，按照推荐的配置即可 将Cloudflare分配的DNS服务器地址增加到域名注册商 无需删除原来的DNS服务器，你的域名可以拥有多个DNS服务器。
Cloudflare会自动检测你的域名是否添加到了指定的DNS服务器，成功后会发送邮件。如果你要手动检测，一个小时最多只能检测一次。
添加成功后，在此处添加DNS记录 如果你的静态页面部署在 Cloudflare，可以直接使用如下配置，将 a.example.com 指向 mypage.pages.dev 如果希望将 *.example.com，比如 a.example.com b.example.com 指向一个自建的服务器
增加这样一条DNS记录：
如果源站的端口不是80和443，比如是1080和1443
增加一条Origin Rule，将80转发到源站的1080
增加一条Origin Rule，将443转发到源站的1443
HTTPS 配置
此处的HTTPS，主要是指CDN和源站之间的通讯。由Cloudflare生成证书，你的源站以该证书启动服务。
如果你的网站只是静态页面，比如个人博客，那么不用配置HTTPS。
在SSL/TLS-Origin Server中，生成源站的证书，并点击下载，将该证书配置到你的服务器（略）。 在SSL/TLS-Overview中，点击Configure，选择Full(Strict)即可。
好了，现在可以使用如下命令，测试 a.example.com 是否被 Cloudflare 代理了
dig a.example.com 阿里云 阿里云的 CDN 服务，现在叫做边缘安全加速ESA（202410）。并且如果你的源站端口不是默认的80和443端口，其中一个必要的步骤，是要提工单才能完成。
假设我们仍然希望将 *.example.com，比如 a.example.com b.example.com 指向一个自建的服务器 gateway.myserver.com:
点击全站分发服务，域名管理，添加域名
这一步骤需要验证 example.com 的域名所有权，按提示操作即可。
在下面新增源站信息中，添加源站，选择你的源站端口80或者443
注意，如果你的源站端口不是80或者443，此处先随便选择一个端口（阿里的界面操作逻辑是比较凌乱的）。
开启自定义端口
在域名管理处，点击配置，在如下两处开启两个配置（自己选择是HTTP还是HTTPS，不要直接看图照搬）
注意，阿里的HTTPS是按次收费的。
此时在基本配置中，编辑源站信息，可以看到可以填写自定义端口了 但是，经过测试，这没什么用，你还要点击右上角的工单，给阿里云的工程师提工单，等待工程师给你开通自定义端口的配置。
我看到阿里云的文档说明，这是一个必要的步骤。我不明白为什么要有提工单才能完成的操作。
所幸工程师们的响应比较快，如果你描述的清楚，半天也能搞定。</description></item><item><title>如何为大疆mavic mini更换机臂</title><link>https://travisbikkle.github.io/2024/09/how-to-replace-dji-mavic-mini-arm/</link><pubDate>Sat, 28 Sep 2024 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2024/09/how-to-replace-dji-mavic-mini-arm/</guid><description>儿子的无人机摔断了左前臂，之前一直用胶水粘着，趁着放假前，赶紧给他修一修。
所需材料 螺丝刀（商家赠送） 翘片或一张废弃的银行卡 镊子 电烙铁、焊锡与松香 可能需要胶水，以及电工胶布 小心与耐心 步骤 拧掉上盖螺丝 使用翘片或者一张银行卡，将上盖移除
为了避免将上盖的卡扣翘断，请提前参考以下几张图，做到心中有数：
侧面：
拧掉底盖螺丝
同样，请参考底盖的卡扣，不要将底盖的卡扣翘断
拧掉底部黑色盖板的螺丝，将盖板拆除，用镊子拔掉天线
用电烙铁将机臂与机身连接的3根线点掉
将机臂与机身连接的结构件螺丝拧掉，并从另一边用螺丝刀将该红圈圈住的位置顶出来，即可卸掉机臂
将机臂的天线，桨叶，马达背面的螺丝，和机臂的覆盖面拆除
好了，现在可以将机臂整个卸掉了。
记住，将三条马达线从机身拽出的时候，需要去除粘在线上的胶水。小心一点，不要像我一样，把线剪断了。
如果你不小心把线剪断了，可以用电烙铁焊回去，用电工胶布包好。
将天线、马达穿入新的机臂。将天线穿回底部，接回原来的位置。将马达线焊回原来的位置。
由于焊点非常近，如果你像我一样不是专业的人员，建议多在别的地方练习一下，如果你把两个焊点焊到了一起，不要放弃，尽快将焊锡重新点走。
我相信你一定会比我焊的好：
最难的一步来了，将机臂与机身的结构件装回去。注意将机臂放置到如图的角度，然后将结构件用力按回去。
注意，不要让天线和马达线挡住结构件
在安装上下盖之前，将马达、天线和桨叶装回，测试功能是否正常。
在安装天线的时候，可以用双面胶固定。
测试项包括：
马达是否正常，是否能正常起飞，起飞和下落的时候飞机是否倾斜。
功能测试完毕后，以此将底部盖板，底壳，上壳装回。</description></item><item><title>使用 Coder 打造自己的云开发环境（在中国大陆）</title><link>https://travisbikkle.github.io/2024/08/coder-how-to/</link><pubDate>Fri, 30 Aug 2024 11:24:28 +0800</pubDate><guid>https://travisbikkle.github.io/2024/08/coder-how-to/</guid><description>使用场景 你需要在不同的开发环境中来回切换 你有很多台电脑，你需要在这些电脑上安装完全一样的开发环境 你出去游玩，手里只有一台平板电脑，但是你的项目出现问题需要紧急修改一部分代码 你是一名开发体验提升工程师（这个岗位是我编的，一般指大公司里面那些专门为开发人员开发工具的开发人员），需要帮助用户随时按需创建完整的开发环境 你希望了解类似于亚马逊、腾讯云是如何快速生成你需要的服务器或轻量服务器 你单纯的喜欢折腾 Coder 是什么 Coder 基于 Terraform，但是声称不需要深入了解 Terraform 就可以使用 Coder。
Terraform 是什么呢？它是一个使用少量配置文件就能在各种云服务商（provider）生成节点的 Infrastructure as Code 工具。
它充当你和腾讯云、亚马逊云之间的一个中间人，你只需要提供配置（可复用，module），描述你需要什么样的节点，以及你的一些登录凭证，它就能帮你创建实例。
在社区里面有将近数百种种 provider，阿里云、腾讯云都在里面。你也可以写provider，对接任意服务商，包括本机部署的k8s或者仅仅一个docker也行， 当然，少不了本文的重点proxmox（pve）。
那我们为什么不去直接使用 Terraform？ Coder 在 terraform 基础上做了一些对人类友好的工作，比如一个简单的web界面（你可以通过配置文件自定义web界面的菜单、输入窗口）， 一些用户、权限管理（企业版支持）、一些模板、一个工作空间管理界面，你还可以直接打开命令行窗口、code server（在线版的vscode）。
个人开发者为什么不选择dev containers？ 首先，其实 coder 支持 dev containers。
其次，在一些你无法安装 docker 的场景，或者你不希望在自己漂亮的 mac 或 win 系统中安装docker，那么 coder 就很适合你。
Coder 的概念 你可以根据 Templates 创建 Workspace，Workspace 就是你的开发环境。
你在 Templates 中可以定义开发环境将部署在 aws 或是你的一台 pve 上，并且还能定义参数，在创建 Workspace 的时候输入 cpu 个数或内存大小等。
甚至还能定义 Workspace 的健康状态检查，并显示到前台界面上。</description></item><item><title>TP-LINK WAR-2600L 路由器 DMZ 功能分析</title><link>https://travisbikkle.github.io/2024/06/tplink-war2600l-iptables/</link><pubDate>Thu, 20 Jun 2024 15:38:19 +0000</pubDate><guid>https://travisbikkle.github.io/2024/06/tplink-war2600l-iptables/</guid><description>问题 硬件型号 TL-WAR2600L v2.0 企业路由器 固件版本 1.0.1 Build 20180313 Rel.37492 本地150自提了这个路由器，准备用它的多 wan 口搞搞事情，但是没想到掉坑里了：
80, 443 端口使用宽带拨号的外网 ip 可以访问（不安全） 1在局域网内输入外网宽带 ip，可以访问路由器管理界面； 2但是在真正的外网上，比如手机不连局域网，访问宽带 ip，实际上又不能访问（我的 ip 是公网 ip）。 虚拟服务器转发的端口，从外网无法基本全部不可用 分析过程 获取 ssh 端口号和密码，登录到路由器后台 系统工具-设备管理-备份与导入设置，导出一个 bin 文件。使用 7z 打开，查看如下路径 \backup-TP-LINK-2024-06-20\tmp\userconfig\etc\config\dropbear 1config dropbear 2 option PasswordAuth &amp;#39;on&amp;#39; 3 option RootPasswordAuth &amp;#39;on&amp;#39; 4 option Port &amp;#39;33400&amp;#39; # 这个就是端口 5 option ssh_port_switch &amp;#39;on&amp;#39; 在路由器管理页面 基本设置 - LAN设置 中获取 mac 地址，然后找一个 linux 命令行工具执行 1## xx-xx-xx-xx-xx-xx 是你找到的 mac 地址。注意 -n 2echo -n &amp;#34;xx-xx-xx-xx-xx-xx&amp;#34;|sed &amp;#34;s/-//g&amp;#34;|md5sum|cut -c 1-8 3xxxxxxxx # 8位密码 登录后我其实还没发现（因为我不折腾 openwrt，有群晖和一台2U机架服务器了，路由器我只追求稳定）， 这个路由器用的是 openwrt barrier breaker（龙妈：我是 chain breaker） 14.</description></item><item><title>Vmware 死机但是鼠标可以动</title><link>https://travisbikkle.github.io/2024/03/vmware-freeze/</link><pubDate>Wed, 06 Mar 2024 17:09:19 +0000</pubDate><guid>https://travisbikkle.github.io/2024/03/vmware-freeze/</guid><description>问题现象 宿主机 Win11 客户机 Kubuntu 22.04 vmware vmware workstation pro 17.5 在使用 VSCode 的时候，我的客户机总是没有规律的死机，这个时候鼠标可以移动，但是无法点击。能看出来客户机并没有真正的死机。我曾经监控过 /var/log 下面的日志，以及用 top 监控过系统资源情况，但是没能发现任何异常。后来在宿主机的虚拟机目录 vmware.log 中，看到如下一行日志，才明白发生了什么：
12024-03-06T16:33:01.365Z In(05) mks VMMouse: Dropping move received while input queue was full 这是最后一行日志，非常好发现。这说明客户机不再接收任何输入，难怪表现为好像死机了！
解决方案 我搜索了这个报错，在 vmware 社区很多年前的一篇文章中找到了如下方法。
config.ini 的位置可能因操作系统不同而不同，请自行搜索位置。 config.ini 修改后保存时可能没有权限，可以先另存到桌面，然后拖动到原位置。 vmx文件在修改后可能发生错误，请先备份该文件。 在 C:\ProgramData\VMware\VMware Workstation\config.ini 添加以下两行 1prefvmx.useRecommendedLockedMemSize = &amp;#34;TRUE&amp;#34; 2prefvmx.minVmMemPct = &amp;#34;100&amp;#34; 一些遇到鼠标或者键盘一直输入问题，例如 characterrrrrrrrr，可能还需要添加如下两行（未经验证） 1mks.disableTypematic = &amp;#34;TRUE&amp;#34; 2mks.disableRemoteClientTypematic = &amp;#34;TRUE&amp;#34; 修改 xxxx.vmx（该文件存在于你的客户机根目录，请将 xxxx.vmx 替换为实际名称） 1sched.mem.pshare.enable = &amp;#34;FALSE&amp;#34; 2mainMem.useNamedFile = &amp;#34;FALSE&amp;#34; 3MemTrimRate = &amp;#34;0&amp;#34; 4MemAllowAutoScaleDown = &amp;#34;FALSE&amp;#34; 如果问题仍然没有解决，可以降级到 17.</description></item><item><title>Termux 常用命令</title><link>https://travisbikkle.github.io/2024/01/termux-useful-command/</link><pubDate>Sat, 27 Jan 2024 16:29:16 +0800</pubDate><guid>https://travisbikkle.github.io/2024/01/termux-useful-command/</guid><description>常用的内置的 termux 命令 输入 termux 并按 Tab 提示，控制台会显示一些 termux 开头的命令。 下面是一些最常用命令，如更换软件源或者在手机内拷贝文件：
1# 更换软件源 2termux-change-repo 3# 开启存储权限 4termux-setup-storage 5# 保持常亮 6termux-wake-lock 从手机复制文件 1# 开启存储权限 2termux-setup-storage 3# 执行后重新启动 termux，然后输入 4ln -s /sdcard/Download ~/download 5# 或者有些手机是 6ln -s /sdcard/Downloads ~/download 定时任务 1# 保持常亮 2termux-wake-lock 3# 安装并启动 crond 4apt install cronie 5crond 6# 增加一个定时任务 7crontab -e 8# 手动输入或使用 https://crontab-generator.org/ 生成一个，例如 91 * * * * bash ~/download/update_domain.sh &amp;gt; ~/download/update.log 10# 按 ctrl o 保存， ctrl x 退出</description></item><item><title>在 Hugo HBstack 主题中使用 Algolia</title><link>https://travisbikkle.github.io/2024/01/hugo-hbstack-algolia/</link><pubDate>Fri, 26 Jan 2024 11:24:23 +0800</pubDate><guid>https://travisbikkle.github.io/2024/01/hugo-hbstack-algolia/</guid><description>TL;DR Algolia 没有将 hugo 的 crawler 模板放上去，因为 hugo 是基于主题的，而每个主题使用的 css 都不一样。
如果你使用 hbstack，你可以参考我的 crawler 配置
1new Crawler({ 2 appId: &amp;#34;xxxxxxxxx&amp;#34;, // 更改为你的appId 3 apiKey: &amp;#34;xxxxxxxxxx&amp;#34;, // 更改为你的apiKey 4 rateLimit: 8, 5 maxDepth: 10, 6 startUrls: [&amp;#34;https://travisbikkle.github.io/&amp;#34;], 7 // 注意这里的多语言链接，和你hugo.yaml中的配置有关系，你可能是单站点，如zh-hans.youdomain.com 8 sitemaps: [ 9 &amp;#34;https://travisbikkle.github.io/zh-hans/sitemap.xml&amp;#34;, 10 &amp;#34;https://travisbikkle.github.io/zh-hant/sitemap.xml&amp;#34;, 11 &amp;#34;https://travisbikkle.github.io/en/sitemap.xml&amp;#34;, 12 ], 13 ignoreCanonicalTo: false, 14 discoveryPatterns: [&amp;#34;https://travisbikkle.github.io/**&amp;#34;], 15 schedule: &amp;#34;every 1 day at 3:00 pm&amp;#34;, 16 actions: [ 17 { 18 indexName: &amp;#34;xxxxxxxx&amp;#34;, // 更改为你的索引名称 19 pathsToMatch: [&amp;#34;https://travisbikkle.</description></item><item><title>Vmware 中 Intellij Idea 快捷键错误</title><link>https://travisbikkle.github.io/2023/12/idea-shortkey-error-in-vmware/</link><pubDate>Fri, 01 Dec 2023 11:24:32 +0800</pubDate><guid>https://travisbikkle.github.io/2023/12/idea-shortkey-error-in-vmware/</guid><description>在VMware中，CTRL ALT是默认的将鼠标焦点从虚拟机中移开的热键，这将导致一切在Vmware中运行的虚拟机系统中以该组合键 位开头的热键不可用。比如Intellij Idea的默认后退快捷键CTRL ALT LEFT。
一开始我以为是KDE热键冲突的问题，因为KDE默认有很多的快捷键，但是经过查看KDE的系统设置，并没有发现热键占用的情况：
直到我意识到screenkey也没有提示，这说明我的KDE根本没有接收到CTRL ALT LEFT按键。答案显而易见，是Vmware的问题了。 为了防止冲突，在Vmware的 编辑-首选项-热键 中可以将这四个按键都勾选上。</description></item><item><title>Vmware Power-ON 脚本启动失败</title><link>https://travisbikkle.github.io/2023/11/vmware-poweron-script/</link><pubDate>Thu, 16 Nov 2023 11:24:33 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/vmware-poweron-script/</guid><description>VMware 的开机脚本位于 /etc/vmware-tools/ 下。如果你的虚拟机报错启动客户机脚本失败，你可以在虚拟机-电源-开机中开机，然后进入该目录调试。
如果你的vmware-tools进行过升级，但是升级过程中出现了问题，可能导致脚本没有正确命名。比如，下面是开机、关机等操作对应的脚本名称
1poweroff-vm-default 2poweron-vm-default 3resume-vm-default 4suspend-vm-default 5vgauth.conf 而你的机器上可能是
1poweroff-vm-default.dpkg-dist 2poweron-vm-default.dpkg-dist 3resume-vm-default.dpkg-dist 4suspend-vm-default.dpkg-dist 5vgauth.conf.dpkg-dist 那么请执行以下命令重命名即可
1find /etc/vmware-tools/ -name &amp;#34;*.dpkg-dist&amp;#34; -exec sh -c &amp;#39;x={}; cp &amp;#34;$x&amp;#34; $(echo $x | sed &amp;#39;s/\.dpkg-dist//g&amp;#39;)&amp;#39; \; 另外你还可能需要检查 /etc/vmware-tools/scripts/vmware 以及各个脚本是否具有可执行权限。</description></item><item><title>Kubuntu Vscode 鼠标列编辑设置</title><link>https://travisbikkle.github.io/2023/11/kubuntu-vscode-mouse/</link><pubDate>Wed, 15 Nov 2023 11:24:33 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu-vscode-mouse/</guid><description>鼠标中键是某些操作系统的默认粘贴快捷键，这导致在VSCode中无法使用鼠标中键进入列编辑模式。
点击 文件-首选项-设置 点击右上角，打开json文件 添加如下行
1&amp;#34;editor.selectionClipboard&amp;#34;: false 关闭 VSCode 并重新打开，测试是否生效。</description></item><item><title>Android Studio Emulator 启动失败</title><link>https://travisbikkle.github.io/2023/11/android-studio-emulator-failed/</link><pubDate>Wed, 15 Nov 2023 11:24:23 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/android-studio-emulator-failed/</guid><description>报错现象 The emulator process for AVD Pixel_3a_API_34_extension_level_7_x86_64 has terminated.
没有任何的报错信息，如果不知道日志在哪里，该如何排查呢？
解决办法 在你的家目录如下位置，执行如下命令，通过命令行查询出虚拟设备并启动，将报错信息打印到前台
1yourname@v:~/Android/Sdk/emulator$ ./emulator -list-avds 2Pixel_3a_API_34_extension_level_7_x86_64 3yourname@v:~/Android/Sdk/emulator$ ./emulator @Pixel_3a_API_34_extension_level_7_x86_64 4INFO | Android emulator version 32.1.15.0 (build_id 10696886) (CL:N/A) 5INFO | Found systemPath /home/yourname/Android/Sdk/system-images/android-34/google_apis/x86_64/ 6INFO | Storing crashdata in: /tmp/android-yourname/emu-crash.db, detection is enabled 7INFO | Duplicate loglines will be removed, if you wish to see each indiviudal line launch with the -log-nofilter flag. 8WARNING | Please update the emulator to one that supports the feature(s): SupportPixelFold 9ERROR | Not enough space to create userdata partition.</description></item><item><title>Windows Vmware Amd-V 开启</title><link>https://travisbikkle.github.io/2023/11/win11-vmware-amd-v/</link><pubDate>Tue, 14 Nov 2023 11:24:35 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/win11-vmware-amd-v/</guid><description>报错现象 我在 Win 11 中安装了 Vmware，并在Vmware中安装了 Kubuntu 22.04 虚拟机。 当我在虚拟机设置的cpu设置中开启AMD-V的时候，Vmware提示如下错误： 起初我并没有在意，只是感觉虚拟机的性能有些差，直到我在虚拟机中尝试使用Android Studio附带的安卓模拟器时，遇到了问题。
无法开启 AMD-V 或 Intel VT-x 的影响 性能下降
虚拟机的性能将受到限制，因为它不能充分利用硬件虚拟化扩展，指令执行和内存管理开销可能增加。 这个性能下降是肉眼可见的，你在点击、挪动鼠标的时候会感觉到有一种难以察觉的迟滞感，非常难受。
兼容性问题
某些操作系统和应用程序可能无法正常运行或可能出现不稳定的情况。
如果你在虚拟机中开发 Android，你可能无法在虚拟机中再开启一个模拟器。
安全性问题
虚拟机之间的隔离性可能会下降，从而增加了安全风险。
如何解决 确认你的主板支持 AMD-V 或者 Intel VT-x
现在的主板基本都支持，你需要通过搜索引擎，搜索你的主板该如何确认是否已经开启该功能。 关闭组策略中的如下设置
在开始菜单中搜索 gpedit，打开组策略编辑器： 在 计算机配置-管理模板-系统-Device Guard 中，双击打开 基于虚拟化的安全，设置为 已禁用： 关闭 Windows 安全中心 中的内存完整性保护
将以下内存完整性的开关关闭，然后重启系统。 如果你曾经开启过Hyper-V，还需要在 控制面板-程序和功能-启用或关闭Windows功能 中，去掉勾选Hyper-V</description></item><item><title>Intellij Idea 启动报错</title><link>https://travisbikkle.github.io/2023/11/idea-start-error/</link><pubDate>Tue, 14 Nov 2023 11:24:23 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/idea-start-error/</guid><description>Intellij Idea 2023.2 启动报错：
Error while opening intellij &amp;ldquo;Cannot connect to already running IDE instance. Exception: Process 2,837 is still running&amp;rdquo;
youtrack 跟踪 https://youtrack.jetbrains.com/issue/IDEA-330531
解决办法 在菜单中编辑启动项，在idea.sh前加入一个前置的脚本，在其中删除不该存在的.lock文件
1/opt/idea-IU-232.10203.10/bin/prestart.sh; /opt/idea-IU-232.10203.10/bin/idea.sh 脚本的内容为
1#!/bin/bash 2rm ~/.config/JetBrains/IntelliJIdea2023.2/.lock</description></item><item><title>Kubuntu 软件源在哪里修改</title><link>https://travisbikkle.github.io/2023/11/kubuntu2204-software-resources-bug/</link><pubDate>Wed, 08 Nov 2023 11:24:30 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu2204-software-resources-bug/</guid><description>Kubuntu 22.04 的软件源可以在 Discover 中的如下位置设置。 但是如果你的 Discover 不显示以上界面，可以通过如下方法来修复。
编辑如下文件
1vi /usr/share/applications/software-properties-qt.desktop 将以下内容替换到源文件
1[Desktop Entry] 2Name=Software Sources 3GenericName=Software Sources 4Comment=Configure the sources for installable software and updates 5Exec=pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY software-properties-qt 6Icon=applications-other 7NoDisplay=false 8Terminal=false 9X-MultipleArgs=false 10Type=Application 11Categories=System;Settings; 12MimeType=text/x-apt-sources-list; 13X-KDE-SubstituteUID=false 14X-Ubuntu-Gettext-Domain=software-properties 如此，在 Discover可以显示软件源的界面，在菜单中也可以搜索到在其它发行版中常见的 软件源 菜单项。</description></item><item><title>Kubuntu 22.04 中文输入法</title><link>https://travisbikkle.github.io/2023/11/kubuntu2204-chiness-im/</link><pubDate>Wed, 08 Nov 2023 11:24:29 +0800</pubDate><guid>https://travisbikkle.github.io/2023/11/kubuntu2204-chiness-im/</guid><description>继续使用 fcitx5（推荐） 安装 fcitx5 中文输入法
1sudo apt install fcitx5-chinese-addons \ 2fcitx5-frontend-gtk4 fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 \ 3fcitx5-frontend-qt5 $(check-language-support) check-language-support 同时安装了系统中缺失的中文语言包（在 区域设置-语言 中点击安装缺失的语言包没有反应），这样才能在第3步中看到 输入法 的选项。
启用 fcitx5 注意，不要相信网上任何要你更改.xinputrc或者在某些文件中添加如下变量的话
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx
请直接使用你登录的用户执行以下命令
1im-config 在弹出的窗口中，依次选择确定，是，选择如下选项即可。 重启系统 在 系统设置-区域设置-输入法 中添加 拼音 或者 pinyin
解决 Intellij Idea 中使用 fcitx5 候选框不跟随的问题 (20240126更新：此时的Idea已经没有此问题，无需进行此步) 可以将如下项目的release文件解压缩到JetBrain产品的jbr目录中（可能导致markdown无法预览）
1https://github.com/RikudouPatrickstar/JetBrainsRuntime-for-Linux-x64 程序员推荐在如下配置中关闭简繁切换快捷键
系统设置-区域设置-输入法-配置附加组件-简繁切换 中删除CTRL SHIFT F的简繁切换快捷键。
解决在 Visual Studio Code 中无法使用任何中文输入法的问题
如果你在 Discover 软件管理工具中下载了 VSCode，请卸载后，在官网下载 deb 包安装，即可解决无法输入中文的问题。
使用 fcitx4 卸载 fcitx5
1sudo apt-get remove fcitx5 安装谷歌拼音输入法</description></item><item><title>右键添加 Cygwin</title><link>https://travisbikkle.github.io/2023/10/cygwin-right-click-menu/</link><pubDate>Tue, 31 Oct 2023 11:24:35 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/cygwin-right-click-menu/</guid><description>本文基于 Windows 10。
效果展示 方法 重新运行 cygwin 安装程序，勾选 chere 安装包 安装完成后，使用管理员身份运行 cygwin，执行以下命令 1chere -i -t mintty -s bash 此时右键菜单应该有 &amp;ldquo;Bash Prompt Here&amp;rdquo; 菜单选项，如果您想更改为中文，可以在更改此处注册表 1计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cygwin64_bash 增加 Icon 字符串以显示菜单图标，并更改中文描述，达到上图菜单效果。</description></item><item><title>Windows 常用命令</title><link>https://travisbikkle.github.io/2023/10/windows-common-commands/</link><pubDate>Tue, 31 Oct 2023 11:24:34 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/windows-common-commands/</guid><description>在右键菜单中添加管理员获得所有权 打开记事本，将以下内容粘贴 1Windows Registry Editor Version 5.00 2[HKEY_CLASSES_ROOT\*\shell\runas] 3@=&amp;#34;管理员取得所有权&amp;#34; 4&amp;#34;NoWorkingDirectory&amp;#34;=&amp;#34;&amp;#34; 5[HKEY_CLASSES_ROOT\*\shell\runas\command] 6@=&amp;#34;cmd.exe /c takeown /f \&amp;#34;%1\&amp;#34; &amp;amp;&amp;amp; icacls \&amp;#34;%1\&amp;#34; /grant administrators:F&amp;#34; 7&amp;#34;IsolatedCommand&amp;#34;=&amp;#34;cmd.exe /c takeown /f \&amp;#34;%1\&amp;#34; &amp;amp;&amp;amp; icacls \&amp;#34;%1\&amp;#34; /grant administrators:F&amp;#34; 8[HKEY_CLASSES_ROOT\exefile\shell\runas2] 9@=&amp;#34;管理员取得所有权&amp;#34; 10&amp;#34;NoWorkingDirectory&amp;#34;=&amp;#34;&amp;#34; 11[HKEY_CLASSES_ROOT\exefile\shell\runas2\command] 12@=&amp;#34;cmd.exe /c takeown /f \&amp;#34;%1\&amp;#34; &amp;amp;&amp;amp; icacls \&amp;#34;%1\&amp;#34; /grant administrators:F&amp;#34; 13&amp;#34;IsolatedCommand&amp;#34;=&amp;#34;cmd.exe /c takeown /f \&amp;#34;%1\&amp;#34; &amp;amp;&amp;amp; icacls \&amp;#34;%1\&amp;#34; /grant administrators:F&amp;#34; 14[HKEY_CLASSES_ROOT\Directory\shell\runas] 15@=&amp;#34;管理员取得所有权&amp;#34; 16&amp;#34;NoWorkingDirectory&amp;#34;=&amp;#34;&amp;#34; 17[HKEY_CLASSES_ROOT\Directory\shell\runas\command] 18@=&amp;#34;cmd.exe /c takeown /f \&amp;#34;%1\&amp;#34; /r /d y &amp;amp;&amp;amp; icacls \&amp;#34;%1\&amp;#34; /grant administrators:F /t&amp;#34; 19&amp;#34;IsolatedCommand&amp;#34;=&amp;#34;cmd.</description></item><item><title>Ubuntu 改键</title><link>https://travisbikkle.github.io/2023/10/remaps-keys-in-ubuntu/</link><pubDate>Tue, 17 Oct 2023 11:24:32 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/remaps-keys-in-ubuntu/</guid><description>在 Ubuntu Software 中搜索 Gnome Tweaks 并安装。 点击 Keyboard &amp;amp; Mouse 点击 Additional Layout Options 在弹出的窗口中，勾选 Ctrl position 中的 Swap Ctrl and Caps Lock 本文基于 Ubuntu 22.04 LTS 及 Gnome Tweaks 3.34.0 编写。
补充：使用kde更加的方便，该设置已经被集成到系统设置中，无需下载 Gnome Tweaks。</description></item><item><title>Code Server Nginx Ssl Error</title><link>https://travisbikkle.github.io/2023/10/code-server-nginx-ssl-error-1006/</link><pubDate>Tue, 17 Oct 2023 11:24:30 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/code-server-nginx-ssl-error-1006/</guid><description>1An unexpected error occurred that requires a reload of this page. 2The workbench failed to connect to the server (Error: WebSocket close with status code 1006) Code server popped up a websocket error when I exposed code-server using a custom domain and a custom port via nginx.
Here is part of my nginx.conf.
1 upstream code{ 2 server xxxxxxxxx; 3 } 4 server { 5 listen 40032 ssl; 6 server_name xxxxxxxx; 7 ssl_certificate certs/mycert.</description></item><item><title>How to add samba entry in /etc/fstab</title><link>https://travisbikkle.github.io/2023/10/fatab-samba/</link><pubDate>Tue, 17 Oct 2023 11:24:29 +0800</pubDate><guid>https://travisbikkle.github.io/2023/10/fatab-samba/</guid><description>Configure Samba On Ubuntu
1. install necessary tools 1sudo apt install cifs-utils 2. prepare credentials 1sudo mkdir /mnt/samba 2sudo vi /root/.smb_credentials 3. put next 2 lines into /root/.smb_credentials 1username=&amp;lt;your user name&amp;gt; 2password=&amp;lt;your password&amp;gt; 4. change credential file permission for security reason 1chmod 600 /root/.smb_credentials 5. configure /etc/fstab 1sudo vi /etc/fstab 6. put next line into /etc/fstab. add noauto to options if you don&amp;rsquo;t want to let Ubuntu auto mount this path 1#&amp;lt;shared path&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; 2//192.</description></item><item><title>使用 Adobe Premiere 制作 GIF 文件</title><link>https://travisbikkle.github.io/2023/05/adobe-premiere-gif/</link><pubDate>Wed, 31 May 2023 11:24:28 +0800</pubDate><guid>https://travisbikkle.github.io/2023/05/adobe-premiere-gif/</guid><description> 双击左下角媒体浏览器，将视频素材导入 在左上角编辑窗口，点击如图所示按钮，标记入点与出点（开始与结束） 将左上角的内容拖动到右下角时间轴内 右键点击时间轴内的波段，点击取消链接，再次右键，选择清除声音轨道的波纹，以删除声音 选择 文件-&amp;gt;导出-&amp;gt;媒体，选择 动画GIF 格式，调整大小后导出</description></item><item><title>Vuepress .x 使用 Pangu.js 实现中英文自动空格</title><link>https://travisbikkle.github.io/2023/05/vuepress-pangu/</link><pubDate>Thu, 25 May 2023 11:24:27 +0800</pubDate><guid>https://travisbikkle.github.io/2023/05/vuepress-pangu/</guid><description>偏执狂的自述 如果你跟我一樣，每次看到網頁上的中文字和英文、數字、符號擠在一塊，就會坐立難安，忍不住想在它們之間加個空格。這個外掛（支援 Chrome 和 Firefox）正是你在網路世界走跳所需要的東西，它會自動替你在網頁中所有的中文字和半形的英文、數字、符號之間插入空白。
漢學家稱這個空白字元為「盤古之白」，因為它劈開了全形字和半形字之間的混沌。另有研究顯示，打字的時候不喜歡在中文和英文之間加空格的人，感情路都走得很辛苦，有七成的比例會在 34 歲的時候跟自己不愛的人結婚，而其餘三成的人最後只能把遺產留給自己的貓。畢竟愛情跟書寫都需要適時地留白。
與大家共勉之。
以上这段恶毒的独白来自 https://github.com/vinta/pangu.js/ 的偏执狂作者 vinta，但依然不能充分的表达有追求的杰青们看到中英文和符号挤在一块的不适。
好在现在可以使用 pangu.js 来帮你规避辛苦的感情路或者孤独终老的风险，赶快来看看如何在 VuePress 中使用吧！
VuePress 1.x VuePress 1.x 版本可以参考 https://shigma.github.io/markdown-it-pangu/vuepress.html 配置。
VuePress 2.x 以上插件并没有适配 VuePress 2.x 的版本，但是好在 VuePress 2.x 预留了 hook，查看 markdown-it-pangu 的代码之后，我发现可以使用如下方法，略过插件，达成在 VuePress 2.x 中调用 pangu.js 的能力。
1// 以下代码在 config.ts 或者 config.js 中 2import panguPlugin from &amp;#39;markdown-it-pangu&amp;#39; 3// ... 省略 4export default defineUserConfig({ 5 extendsMarkdown: (md) =&amp;gt; { 6 md.use(panguPlugin) 7 }, 8// ... 省略 可以在任一 markdown 文件中测试，如：</description></item><item><title>Vuepress Algolia</title><link>https://travisbikkle.github.io/2023/05/vuepress-algolia/</link><pubDate>Wed, 24 May 2023 11:24:28 +0800</pubDate><guid>https://travisbikkle.github.io/2023/05/vuepress-algolia/</guid><description>Algolia 是一个优秀的静态网站搜索插件，非常适用于没有后台的静态网页博客系统（比如github pages）。
经过一定的申请步骤后（见下文链接），Algolia 通过爬虫定期爬取网站的数据将其存放到自己的数据库中。用户在网站上搜索的时候，就可以调用爬取的数据，显示搜索结果。但是 Algolia 有个缺点：它不是开箱即用的。参考以下两个链接，可以申请 Algolia 并在 VuePress 中做初步的配置。
VuePress 博客优化之开启 Algolia 全文搜索
VuePress 官网
但是每个人的环境、步骤可能都不一样，尤其是如果你经历过从 VuePress 1.x 迁移过 VuePress 2.x，可能你会发现无论如何都无法搜索出结果，并且无法从网络上得到答案。
如果你遇到了这个问题，可以参考以下步骤进行排障：
确定你的 VuePress 版本是 1.x 还是 2.x 可以在你的博客代码中的 package.json 中查看。 进入 https://crawler.Algolia.com/admin/ 编辑器检查以下三处配置 2.1 pathsToMatch 这一行默认带了一级 docs，请确认你的网站是否包含，如果不包含请删掉这里的docs 2.2 确认 lvl0.selectors 这一行，是 .sidebar-heading.active 还是 p.sidebar-heading.open。前者对应的是 VuePress 2.x 版本，后者适配的是 VuePress 1.x 版本，如果错用，在此界面点击 URL Tester 的测试时将可以爬取到 URL 但是无法爬取到 index。如果确认错配了，请在该网站找到正确的示例代码覆盖（注意替换为你的网站信息） 2.3 确认你的 appId，apiKey，indexName 等是否正确。 以下是我的配置，基于 VuePress 2.x，请参考。 1new Crawler({ 2 appId: &amp;#34;xxxxxx&amp;#34;, 3 apiKey: &amp;#34;xxxxxx&amp;#34;, 4 rateLimit: 8, 5 maxDepth: 10, 6 startUrls: [&amp;#34;https://travisbikkle.</description></item><item><title>Ubuntu Vnc</title><link>https://travisbikkle.github.io/2023/04/ubuntu-vnc/</link><pubDate>Mon, 10 Apr 2023 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2023/04/ubuntu-vnc/</guid><description>本文基于 Ubuntu 20.04 编写。
安装 vncserver 和要使用的桌面管理器 xfce 1apt install tightvncserver xfce4 xfce4-goodies 更改密码 1vncpasswd 配置 vnc 以便客户端连接时使用 xfce 桌面 编辑 ~/.vnc/xstartup，输入以下内容 1#!/bin/sh 2unset SESSION_MANAGER 3unset DBUS_SESSION_BUS_ADDRESS 4startxfce4 &amp;amp; 执行以下命令 1chmod +x ~/.vnc/xstartup 禁用休眠 1systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target 启动服务器 1vncserver -localhost no -geometry 1920x1080 参考 https://linuxconfig.org/vnc-server-on-ubuntu-20-04-focal-fossa-linux</description></item><item><title>端口转发的一些方法</title><link>https://travisbikkle.github.io/2023/02/port-forward/</link><pubDate>Wed, 01 Feb 2023 11:24:24 +0800</pubDate><guid>https://travisbikkle.github.io/2023/02/port-forward/</guid><description>在《如何抓包分析 vrrp 报文是否中断》中我们使用了 iptables 进行指定协议的报文日志记录功能，此处新增一个好用的命令。
我们在开发过程中，可能经常需要经过堡垒机、跳板机等中转一次，才能访问到处于小网中的服务，如数据库。使用以下命令，可以在不借助第三方软件的情况下，完成端口转发，实现直连小网服务。
iptables 假设 192.168.1.3 是你的小网机器，端口是 15432
1iptables -t nat -A PREROUTING -p tcp --dport 15432 -j DNAT --to-destination 192.168.1.3:15432 2iptables -t nat -A POSTROUTING -p tcp -m tcp --dport 15432 -j MASQUERADE nginx upstream 192.168.1.3 { server 192.168.1.3:15432; } server { listen 15432; proxy_pass 192.168.1.3; proxy_connect_timeout 1h; proxy_timeout 1h; } 或者用 go 自己写了一些小工具来转发，我自己还写了一个自动生成 xshell 配置的工具，因为在公司内网，不便共享。</description></item><item><title>如何写一个 K8s Operator</title><link>https://travisbikkle.github.io/2022/05/operator-dev/</link><pubDate>Thu, 26 May 2022 11:24:26 +0800</pubDate><guid>https://travisbikkle.github.io/2022/05/operator-dev/</guid><description>使用过 k8s 的同学可能执行过以下命令：
1kubectl edit sts myapp # 编辑一个名称为 myapp 的 StatefulSet 2kubectl describe sts myapp # 查看一个名称为 myapp 的 StatefulSet StatefulSet 是 k8s 定义的一种资源，类似的还有 Deployment、Job、ConfigMap 等。当你执行 edit 命令编辑这些资源后，k8s 会通过不停轮询的方式（核心概念：control loop），将目标资源调整（核心概念：reconcile）到你期望的状态。
例如，你按了空调的遥控器，希望将房间的温度下调到 20℃。空调的压缩机开始工作，并且同时不停的检测当前实际的温度与你期望的温度之间的差异，直到温度达到20℃，这就是一个 control loop 的例子。
很简单，对吧？
设想一下如果不是这样，你将一手拿着温度计，然后不停的告诉空调温度仍然很高，或者已经变得过低了。
这就是声明式 API 的好处，用户只需要告诉程序你的期望，剩下的交给程序来做（对于程序开发者来说是雷锋行为），而程序实现目标最省力的方式，就是采用 control loop 的方式，不停的对比期望与现实的差距。
Operator 是什么 试想我们不再满足于 k8s 提供的默认的资源，我们想利用这种省心省力的方式，来管理我们自己的资源，如：数据库的一个用户。
你可能想说，数据库的用户存在于数据库内，我知道数据库的集群可以定义为 StatefulSet 然后由 k8s 管理，用户又怎么使用 k8s 管理呢？为什么要用 k8s 来管理呢？
为什么要用 k8s 管理用户资源？
以 MySql 为例，通常我们创建用户，是使用 root 用户登录到数据库，执行 sql 语句创建用户。但是设想以下几种场景：
你不知道 root 用户的密码，或者因为安全要求，不能提供给你 你不知道 MySql 的 IP 你知道以上信息，但是因为没有开启相应的节点权限，你无法登录数据库 你完成了以上所有步骤，结果其中某些登录或者创建步骤失败了，你和数据库运维人员开始扯皮 看到了吧？这些都是生产环境中，真实会遇到的事情。而使用以下步骤，我们就可以一举解决这些问题。</description></item><item><title>vrrp 报文抓包的方法</title><link>https://travisbikkle.github.io/2022/02/vrrp-cap/</link><pubDate>Tue, 01 Feb 2022 11:24:24 +0800</pubDate><guid>https://travisbikkle.github.io/2022/02/vrrp-cap/</guid><description>keepalived 的主机和备机，会每隔3s通过单播，向对方发送 vrrp 报文，当备机在 3次*每次心跳间隔（keepalived.conf中的adver_int参数） 都收不到主机的广播，自己将会升主。
以下两种可能都会存在：
主机没有发送广播 主机发送了广播，备机没有收到 因此，在主备都需要监控vrrp的发送（out）或接收（in）记录。 使用以下两种方式，都可以监控每次 vrrp 报文的内容，以便定位问题。
iptables 在主机和备机都添加监控vrrp发送和接收的iptables日志（该规则仅抓取vrrp行为，没有其它副作用） 1iptables -t raw -A PREROUTING -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 2iptables -t raw -A OUTPUT -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 使用以下命令检测是否添加成功： 1iptables -L -t raw -n 在/var/log/messages可以查看vrrp的记录。如果是suse或其它操作系统，该日志中没有vrrp记录的话，可以在dmesg或者/var/log/的目录中grep VRRP查看。 定位完问题后，执行以下命令删除添加的iptables规则 1iptables -t raw -D PREROUTING -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; 2iptables -t raw -D OUTPUT -p vrrp -j LOG --log-level 6 --log-prefix &amp;#34;VRRP: &amp;#34; tcpdump wireshark tcpdump 命令需要自行获取，wireshark 需要自行下载，这部分仅记录常用命令和注意点，由于在公司内网，图片无法放上来。</description></item><item><title>一个数据库主备频繁切换案例</title><link>https://travisbikkle.github.io/2022/01/a-case-of-database-switch/</link><pubDate>Thu, 20 Jan 2022 11:24:25 +0800</pubDate><guid>https://travisbikkle.github.io/2022/01/a-case-of-database-switch/</guid><description>问题现象 某集团某局点分别部署了某数据库的主备实例，业务发现偶尔访问数据库报错。
定位结论 其中一个节点使用的某物理机型，网卡存在故障，发生了多次复位，致使某数据库备机的keepalived双机软件接收不到对端的vrrp信号，备机在网卡复位期间短暂升主，两台机器都出现了vip，导致业务访问某数据库失败。
需要联系厂商，针对以下疑问给出答复：
节点A（某品牌F）和节点B（某品牌L）使用的网卡型号一样，但是为什么某品牌F的固件版本要比某品牌L的新？
某品牌L的网卡信息，和某品牌L官网该型号的机器的认证信息不一致，见下表。
表1-1 某品牌F机型、某品牌L机型和某品牌L官网认证信息对比
项目 节点A 节点B 某品牌L官网认证信息 服务器型号 某品牌F FiberHome R2200 V5 某品牌L Inspur NF8480M5 某品牌L Inspur NF8480M5 网卡驱动 ixgbe 5.1.0-k ixgbe 5.1.0-k igb.ko 5.6.0-k 网卡固件 0x800006da 1.1824.0 0x800003df - 是否发生过重启 否 是 - 定位过程 查看两个节点的keepalived日志
1cd /xx/xx/xx/logs 2zgrep Entering keepalived* 发现主机（节点A）上无异常，备机的keepalived在master、backup、fault三个状态频繁切换。
当keepalived进入master状态，会将vip绑定到网卡上。这样主机和备机都有vip，业务访问某数据库将会出现问题。
在备机上使用如下命令可以抓到短暂出现的vip：
1while true;do ip a s bond1|grep x.x.x.x;sleep 0.2;done 查看备机的keepalived.log，发现备机无法接收到主机的vrrp广播。
keepalived的主备机都会每3s发送一次vrrp协议的广播，当备机连续3次（9s）接收不到主机的广播，就会将自己升主。
查看主机的keepalived.log，发现主机在正常发送vrrp广播。
使用tcpdump在主机和备机同时抓包，问题复现后，发现主机确实发送了vrrp的广播，但是备机在(15:46:14-15:46:32)有18s的时间没有接收到任何来自主机的广播（此处应该有图，但是不放了）。
使用如下命令，查看备机上keepalived接收vrrp广播的网卡情况，发现是一张由eth4和eth8组成的active-backup模式的逻辑网卡，：
1cat /proc/net/bonding/bond1 查看/var/log/messages中两张物理网卡的信息，发现eth4和eth8网卡发生了多次复位，复位时间和gauss-datacube出现异常的时间能够对应的上（此处应该有图，但是不放了）。
查看节点B的服务器型号及网卡型号、固件版本（此处应该有图，但是不放了）。 节点B和节点A对比，发现节点A的这台某品牌F机型，比节点B的某品牌L机型使用的网卡固件要更新： 节点B和某品牌L官网认证信息(https://www.suse.com/nbswebapp/yesBulletin.jsp?bulletinNumber=148996)对比，发现节点B节点使用的网卡driver name和认证信息不符： 除了某局点节点B的某品牌L机型节点，我们还在其它局点的appdb的节点的某品牌L机型上，也发现了网卡重启的现象，该现象在某品牌F机型上未发现，判断是某品牌L的这批机器网卡存在故障。 这种短暂网卡重启的问题，由于tcp重连的特性，对于普通的应用感知不大，但是对于数据库这样包含双机软件的敏感应用，影响较大。</description></item><item><title>Diff Patch 应用</title><link>https://travisbikkle.github.io/2021/07/diff-patch/</link><pubDate>Wed, 14 Jul 2021 11:24:27 +0800</pubDate><guid>https://travisbikkle.github.io/2021/07/diff-patch/</guid><description>假设有三个文件，你需要将修复的bug的代码，合入到file_1.1中，生成一个名为file_1.1.fix的文件。
文件名 说明 file_1.0.orgin 旧版本的原始文件 file_1.0.fix 旧版本的修正文件，修改了一些 bug file_1.1 新版本的原始文件 参考以下命令 diff 用于对比生成补丁
1diff -urN old new &amp;gt; patch 2diff -urN file_1.0.origin file_1.0.fix &amp;gt; bug_patch patch 用于将补丁应用到新文件
1patch new -i patch -o target 2patch file_1.1 -i bug_patch -o file_1.1.fix diff path 是 linux 标准命令，windows 可以下载 git-bash 后使用。</description></item><item><title>Blktrace</title><link>https://travisbikkle.github.io/2021/04/blktrace/</link><pubDate>Mon, 19 Apr 2021 11:24:25 +0800</pubDate><guid>https://travisbikkle.github.io/2021/04/blktrace/</guid><description>可以用来定位 I/O 性能问题的工具有很多。常见的有 fio, dd, atop, iotop, iostat, vmstat 等。vmstat 可以提供系统性能的一个概览，一般可以看出来性能问题究竟是不是 I/O 的锅。想要具体查看每个设备的 I/O 情况，如 average request size, reads or writes per second，可以使用 iostat。
blktrace 介绍 更细粒度的分析，可以使用 blktrace。 blktrace 可以记录在 I/O 栈的多个阶段分别耗时多少。blktrace 的输出结果是二进制文件，可以用 blkparse 解析，但是它仍然很难读，需要使用 btt 来进一步转换成更易读的形式。
btt 输出结果涉及到的一些基础知识 btt 会对 I/O 栈 的不同阶段的耗时做分析，这些阶段是指：
Q — A block I/O is Queued G — Get Request M — A block I/O is Merged with an existing request. I — A request is Inserted into the device&amp;#39;s queue.</description></item><item><title>npm 镜像等设置</title><link>https://travisbikkle.github.io/2018/10/common-pakage-manager-proxy/</link><pubDate>Sat, 13 Oct 2018 11:24:31 +0800</pubDate><guid>https://travisbikkle.github.io/2018/10/common-pakage-manager-proxy/</guid><description>中国加速镜像 npm可能未及时同步 pip可能未同步官方已经删除的恶意软件包 manager useful commands command pnpm pnpm get registry pnpm config set registry https://registry.npmmirror.com npm npm get registry npm config set registry https://registry.npmmirror.com yarn yarn config get registry yarn config set registry https://registry.npmmirror.com pip pip config list # for pip install
pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/
# for pip search
pip config set global.index https://mirrors.aliyun.com/pypi
pip config set global.trusted-host mirrors.aliyun.com 代理 注意如果你没有翻墙软件就不用做下面的配置，请将地址修改为你实际的代理地址。
npm(~/.npmrc)
1proxy=http://localhost:8118 2https_proxy=https://localhost:8118 3strict-ssl=false yarn(~/.yarnrc)
1env: 2 proxy &amp;#39;http://localhost:8118&amp;#39; 3 https_proxy &amp;#39;https://localhost:8118&amp;#39; 4 strict-ssl false</description></item></channel></rss>