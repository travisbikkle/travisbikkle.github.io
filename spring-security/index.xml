<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring security on 奇风岁月</title><link>https://travisbikkle.github.io/spring-security/</link><description>Recent content in spring security on 奇风岁月</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Fri, 19 Jul 2024 10:20:30 +0800</lastBuildDate><atom:link href="https://travisbikkle.github.io/spring-security/index.xml" rel="self" type="application/rss+xml"/><item><title>Oauth2 限制登录一个客户端</title><link>https://travisbikkle.github.io/2024/07/oauth2-single-login/</link><pubDate>Fri, 19 Jul 2024 10:20:30 +0800</pubDate><guid>https://travisbikkle.github.io/2024/07/oauth2-single-login/</guid><description>有时候我们希望用户只能在一台设备登录账号（我们太吝啬了）。
使用 springboot oauth2 怎么实现呢？
注意本文不会带你使用 spring security 实现 oauth2 登录，仅仅是讨论我们那个吝啬的需求。
假设我们有这样一个自定义的认证实现类：
1public class RedisOAuth2AuthorizationService implements OAuth2AuthorizationService { 2 3	private final static Long TIMEOUT = 10L; 4 5	private static final String AUTHORIZATION = &amp;#34;token&amp;#34;; 6 7	private final RedisTemplate&amp;lt;String, Object&amp;gt; redisTemplate; 8 9	@Override 10	public void save(OAuth2Authorization authorization) { 11 // is refresh token mode or code mode 12 // ... 13 // is access token mode 14	if (isAccessToken(authorization)) { 15	OAuth2AccessToken accessToken = authorization.</description></item></channel></rss>